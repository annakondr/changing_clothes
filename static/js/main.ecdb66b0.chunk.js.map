{"version":3,"sources":["redux/actions.js","redux/reducers.js","Components/Clothes.js","Components/ClothesHandler.js","App.js","serviceWorker.js","index.js"],"names":["EDIT_START","EDIT_PROGRESS","CANCELING","UPDATE_LIST","REMOVE_ITEM","INPUT_NEW_ITEM","ADD_ITEM","initialState","clothes","edit","textInput","selected","newItem","Clothes","props","inputChanged","addItem","editClicked","clickEnter","clickEsc","removeItem","inputNewItem","react_default","a","createElement","className","type","value","onChange","event","target","onClick","map","item","index","key","defaultValue","onKeyDown","disabled","href","ClothesHandler","connect","state","ownProps","dispatch","startEdit","input","progressEdit","store","createStore","arguments","length","undefined","action","Object","objectSpread","toConsumableArray","filter","indexOf","concat","App","es","Components_ClothesHandler","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ecdb66b0.chunk.js","sourcesContent":["export const EDIT_START = 'START EDIT';\nexport const EDIT_PROGRESS = 'PROGRESS EDIT';\nexport const CANCELING = 'EDIT ESC';\nexport const UPDATE_LIST = 'EDIT ENTER';\nexport const REMOVE_ITEM = 'REMOVE ITEM';\nexport const INPUT_NEW_ITEM = 'INPUT NEW ITEM';\nexport const ADD_ITEM = 'ADD ITEM';\n\nexport function startEdit(index) {\n  return {\n    type: EDIT_START,\n    index\n  };\n}\n\nexport function progressEdit(input) {\n  return {\n    type: EDIT_PROGRESS,\n    input\n  };\n}\n\nexport function cancelEdit() {\n  return {\n    type: CANCELING\n  };\n}\n\nexport function updateList() {\n  return {\n    type: UPDATE_LIST\n  };\n}\n\nexport function removeItem(index) {\n  return {\n    type: REMOVE_ITEM,\n    index\n  };\n}\n\nexport function inputNewItem(newItem) {\n  return {\n    type: INPUT_NEW_ITEM,\n    newItem,\n  };\n}\n\nexport function addItem(newItem) {\n  return {\n    type: ADD_ITEM,\n    newItem,\n  };\n}\n","import {ADD_ITEM, CANCELING, EDIT_PROGRESS, EDIT_START,\n  INPUT_NEW_ITEM, REMOVE_ITEM, UPDATE_LIST} from './actions';\n\nconst list = [\n  'Apron',\n  'Belt',\n  'Cardigan',\n  'Dress',\n  'Earrings',\n  'Fur coat',\n  'Gloves',\n  'Hat',\n];\n\nconst initialState = {\n  clothes: list,\n  edit: false,\n  textInput: '',\n  selected: null,\n  newItem: '',\n};\n\nexport function getNextState(state = initialState, action) {\n  switch (action.type) {\n    case EDIT_START:\n      return {\n        ...state,\n        edit: true,\n        selected: action.index\n      };\n    case EDIT_PROGRESS:\n      return {\n        ...state,\n        textInput: action.input\n      };\n    case CANCELING:\n      return {\n        ...state,\n        selected: null\n      };\n    case UPDATE_LIST:\n      return {\n        ...state,\n        clothes: [...state.clothes].map((item, index) => {\n          if (state.selected !== index) {\n            return item\n          } else {\n            return state.textInput\n          }\n        }),\n        edit: false,\n        selected: null\n      };\n    case REMOVE_ITEM:\n    return {\n      ...state,\n      clothes: state.clothes.filter((item) => {\n        return state.clothes.indexOf(item) !== action.index;\n      }),\n      selected: null,\n    };\n    case INPUT_NEW_ITEM:\n      return {\n        ...state,\n        newItem: action.newItem,\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        clothes: [...state.clothes, action.newItem],\n      };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport './Clothes.css'\n\nfunction Clothes(props) {\n  const {clothes, edit, textInput, selected, newItem, inputChanged,\n    addItem, editClicked, clickEnter, clickEsc, removeItem, inputNewItem} = props;\n\n  return (\n    <div className=\"block\">\n      <input type='text' value={newItem} className=\"addItem\"\n             onChange={(event) => inputNewItem(event.target.value)}/>\n      <button onClick = {() => {addItem(newItem); inputNewItem('');}}> Add </button>\n      <ul>\n        {clothes.map((item, index) => {\n          if (!edit || index !== selected) {\n            return (\n              <li key={item}>\n                <span className=\"item\">{item}</span>\n                <button onClick = {() => editClicked(index)}> Edit </button>\n              </li>)\n          } else {\n            return (\n              <li key={item} className={edit ? 'selected' : ''}>\n                <label><input type='text' defaultValue={item}\n                       onChange={(event) => inputChanged(event.target.value)}\n                       onKeyDown={(event) => {\n                         if(event.key === 'Enter') {\n                           clickEnter(textInput);\n                           inputChanged('')\n                         } else if(event.key === 'Escape') {\n                           clickEsc()\n                         }\n                       }}\n                />\n                <button disabled={true}> Edit </button>\n                <a href=\"#?\" className=\"remove\" onClick={() => removeItem(index)}>&times;</a>\n                  <br/><small>Click Enter to save changes</small></label>\n              </li>\n            )\n          }\n        })\n        }\n      </ul>\n    </div>\n\n  )\n}\n\nexport default Clothes;\n","import {connect} from 'react-redux'\nimport Clothes from './Clothes';\nimport {startEdit, progressEdit, cancelEdit, updateList, removeItem, addItem, inputNewItem} from '../redux/actions';\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    clothes: state.clothes,\n    edit: state.edit,\n    textInput: state.textInput,\n    selected: state.selected,\n    newItem: state.newItem,\n  }\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    editClicked: (index) => dispatch(startEdit(index)),\n    inputChanged: (input) => dispatch(progressEdit(input)),\n    clickEsc: () => dispatch(cancelEdit()),\n    clickEnter: (input) => dispatch(updateList(input)),\n    removeItem: (index) => dispatch(removeItem(index)),\n    inputNewItem: (input) => dispatch(inputNewItem(input)),\n    addItem: (newItem) => dispatch(addItem(newItem))\n  }\n}\n\nconst ClothesHandler = connect(mapStateToProps, mapDispatchToProps)(Clothes);\n\nexport default ClothesHandler;\n","import React from 'react';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux'\nimport {getNextState} from './redux/reducers';\nimport ClothesHandler from './Components/ClothesHandler';\n\n\nconst store = createStore(getNextState);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ClothesHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets;\r\n      // see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost.\r\n        // Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}